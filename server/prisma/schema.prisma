// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  fullName      String
  password      String

  bids          Bid[]
  auctions      Auction[]
  notifications Notification[]
  role          Role
  wonAuctions   Auction[]  @relation("WonAuctions")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}


enum Role {
  USER
  AUCTIONEER
}

model Auction {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  startingBid  Float         @default(0)
  currentBid   Float         @default(0)
  reservePrice Float?
  
  endsAt       DateTime
  
  creatorId    Int
  creator      User         @relation(fields: [creatorId], references: [id])
  bids         Bid[]
  status       AuctionStatus @default(ACTIVE)
  winnerId    Int?     
  winner      User?     @relation("WonAuctions", fields: [winnerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bid {
  id        Int     @id @default(autoincrement())
  amount    Float
  auctionId Int
  auction   Auction @relation(fields: [auctionId], references: [id])
  userId    Int
  user      User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

model Notification {
  id        Int      @id @default(autoincrement())
  message   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

enum AuctionStatus {
  ACTIVE
  ENDED
  COMPLETED
}
